services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: delivery
      POSTGRES_PASSWORD: delivery
      POSTGRES_DB: delivery_optimization
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U delivery -d delivery_optimization -q || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  optimization:
    build:
      context: ./optimization
      dockerfile: Dockerfile
    volumes:
      - ./optimization:/app
    environment:
      - PYTHONUNBUFFERED=1
    ports:
      - "5001:5000"
    depends_on:
      postgres:
        condition: service_healthy

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgresql://delivery:delivery@postgres:5432/delivery_optimization
      - PORT=3001
    volumes:
      - ./backend:/app/backend
      - backend_node_modules:/app/backend/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "cd /app/backend && npm install && npm run dev"

volumes:
  postgres_data:
  backend_node_modules: 